int main(int argc, char *argv[]) {
	NodeStruct(int,c,vector<int>,s,int,cc,ONE+TWO);
	LoadData(argv[1], argv[2]);

	DefineVertexProcessor(init) {v.c = id(v); v.cc = -1; v.s.clear(); return v;};

	DefineEdgeUpdater(update) {d.s.push_back(s.c);};

	vector<int> cnt(n_vertex,0);
	DefineVertexProcessor(local1) {
		int max_cnt = 0;
		for (auto &i:v.s) {
			cnt[i]++;
			if (cnt[i] > max_cnt) {
				max_cnt = cnt[i];
				v.cc = i;
			}
		}
		v.s.clear();
		return v;
	};

	DefineVertexFilter(filter) {return v.cc != v.c;};
	DefineVertexProcessor(local2) {v.c = v.cc;};

	vertexSubset A = processVertices(All, CTrueV, init);
	for(int i = 0; i < 100 && Size(A) > 0; i++) {
		print("Round %d: size=%d\n", i, Size(A));
		A = processEdgesDense(All, EU, CTrueE, update, CTrueV);
		A = processVertices(All, CTrueV, local1);
		A = processVertices(All, filter, local2);
	}

	print( "total time=%0.3lf secs\n", GetTime());
	return 0;
}
